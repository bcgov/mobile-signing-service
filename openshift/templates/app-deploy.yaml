apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: mobile-signing-service
metadata:
  name: mobile-signing-service
objects:
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-from-openshift-ingress
    spec:
      ingress:
        - from:
            - namespaceSelector:
                matchLabels:
                  network.openshift.io/policy-group: ingress
      podSelector: {}
      policyTypes:
        - Ingress
  - kind: NetworkPolicy
    apiVersion: networking.k8s.io/v1
    metadata:
      name: allow-api-to-patroni
    spec:
      podSelector:
        matchLabels:
          cluster-name: patroni
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  component: api
          ports:
            - protocol: TCP
              port: 5432
  - kind: NetworkPolicy
    apiVersion: networking.k8s.io/v1
    metadata:
      name: allow-api-to-minio
    spec:
      podSelector:
        matchLabels:
          component: minio
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  component: api
          ports:
            - protocol: TCP
              port: 9000
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: api-config
      labels:
        app: mobile-signing-service
        component: api
    data:
      config.json: |
        {
          "temporaryUploadPath": "uploads",
          "expirationInDays": 7,
          "minio": {
            "bucket": "secode-sign",
            "port": 9000,
            "useSSL": false,
            "expiry": 604800,
            "region": "us-east-1"
          },
          "session": {
            "maxAge": 604800000,
            "expires": 604800000
          },
          "agent": {
            "signPath": "/v1/job/sign",
            "deployPath": "/v1/job/deploy"
          },
          "db": {
            "database": "cicd"
          },
          "sso": {
            "grantType": "client_credentials",
            "clientId": "signing-api",
            "callback": "/v1/auth/callback",
            "authUrl": "${SSO_BASE_URL}/auth/realms/devhub/protocol/openid-connect/auth",
            "tokenUrl": "${SSO_BASE_URL}/auth/realms/devhub/protocol/openid-connect/token",
            "certsUrl": "${SSO_BASE_URL}/auth/realms/devhub/protocol/openid-connect/certs"
          }
        }
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: web-caddy-config
      labels:
        app: mobile-signing-service
        component: web
    data:
      Caddyfile: |-
        # Where caddy should listen
        :2015

        # Turn on the Web/file server
        file_server
        templates {
          mime  "text/javascript" "application/javascript"
        }

        # The site root
        root * /opt/app-root/

        # Because we should
        encode zstd gzip

        # This rewrite rule may be required to get React apps
        # to deal with trailing slashes properly.
        #@filter {
        #       not path_regexp ^\/0.0.0.0
        #       file {
        #               try_files {path} {path}/ /?url={uri}
        #       }
        #}
        #rewrite @try_files {http.matchers.file.relative}

        # This properly deals with react routes.
        try_files {path} {path}/ /index.html

        # On OCP we should log to stdout so Prometheus can
        # slurp up the logs for human consumption.
        log {
          #errors stdout
          output stdout
          format single_field common_log
          level info
        }
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      labels:
        app: mobile-signing-service
        component: web
      name: web-env
    data:
      SSO_BASE_URL: ${SSO_BASE_URL}
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      labels:
        app: mobile-signing-service
        component: api
      name: api-env
    data:
      PORT: ${API_PORT}
      NODE_ENV: ${NODE_ENV}
      AGENT_URL: "http://${AGENT_HOST}"
      API_URL: "https://${HOSTNAME_HTTPS}"
      MINIO_HOST: "minio.${NAMESPACE}.svc"
      POSTGRESQL_HOST: "patroni.${NAMESPACE}.svc"
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      labels:
        app: mobile-signing-service
        component: minio
      name: minio-env
    data:
      MINIO_CONFIG_DIR: /tmp
      MINIO_DATA_DIR: /data
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        app: mobile-signing-service
        component: minio
      name: minio-data
    spec:
      accessModes:
        - ReadWriteMany
      resources:
        requests:
          storage: ${MINIO_VOLUME_CAPACITY}
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: web
      labels:
        app: mobile-signing-service
        component: web
    spec:
      replicas: ${{REPLICAS}}
      revisionHistoryLimit: 3
      selector:
        app: mobile-signing-service
        component: web
      triggers:
        - type: ConfigChange
        - imageChangeParams:
            automatic: true
            containerNames:
              - web
            from:
              kind: ImageStreamTag
              name: signing-web:${WEB_IMAGE_TAG}
              namespace: ${SOURCE_IMAGE_NAMESPACE}
          type: ImageChange
      template:
        metadata:
          name: web
          labels:
            app: mobile-signing-service
            component: web
        spec:
          volumes:
            - name: config-vol
              configMap:
                name: web-caddy-config
          terminationGracePeriodSeconds: 30
          containers:
            - name: web
              envFrom:
                - configMapRef:
                    name: web-env
              image: ""
              imagePullPolicy: Always
              ports:
                - containerPort: 2015
              resources:
                requests:
                  cpu: ${WEB_CPU_REQUEST}
                  memory: ${WEB_MEMORY_REQUEST}
                limits:
                  cpu: ${WEB_CPU_LIMIT}
                  memory: ${WEB_MEMORY_LIMIT}
              volumeMounts:
                - name: config-vol
                  mountPath: /opt/app-root/etc/Caddyfile
                  subPath: Caddyfile
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: minio
      labels:
        app: mobile-signing-service
        component: minio
    spec:
      replicas: ${{REPLICAS}}
      revisionHistoryLimit: 3
      selector:
        app: mobile-signing-service
        component: minio
      template:
        metadata:
          name: minio
          labels:
            app: mobile-signing-service
            component: minio
        spec:
          volumes:
            - name: minio-vol
              persistentVolumeClaim:
                claimName: minio-data
          terminationGracePeriodSeconds: 10
          containers:
            - name: minio
              envFrom:
                - configMapRef:
                    name: minio-env
                - secretRef:
                    name: minio-creds
              image: "docker-remote.artifacts.developer.gov.bc.ca/minio/minio:RELEASE.2020-10-28T08-16-50Z-13-gfed3bda69"
              imagePullPolicy: IfNotPresent
              args: ["server", "/data"]
              ports:
                - containerPort: 9000
              volumeMounts:
                - mountPath: /data
                  name: minio-vol
              resources:
                requests:
                  cpu: ${MINIO_CPU_REQUEST}
                  memory: ${MINIO_MEMORY_REQUEST}
                limits:
                  cpu: ${MINIO_CPU_LIMIT}
                  memory: ${MINIO_MEMORY_LIMIT}
              # startupProbe:
              #   httpGet:
              #     path: /minio/login
              #     port: 9000
              #     scheme: HTTP
              #   failureThreshold: 10
              #   periodSeconds: 5
              # livenessProbe:
              #   httpGet:
              #     path: /minio/login
              #     port: 9000
              #     scheme: HTTP
              #   failureThreshold: 3
              # readinessProbe:
              #   httpGet:
              #     path: /minio/login
              #     port: 9000
              #     scheme: HTTP
              #   failureThreshold: 3
          imagePullSecrets:
            - name: artifactory-creds
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: api
      labels:
        app: mobile-signing-service
        component: api
    spec:
      replicas: ${{REPLICAS}}
      revisionHistoryLimit: 3
      selector:
        app: mobile-signing-service
        component: api
      triggers:
        - type: ConfigChange
        - imageChangeParams:
            automatic: true
            containerNames:
              - api
            from:
              kind: ImageStreamTag
              name: signing-api:${API_IMAGE_TAG}
              namespace: ${SOURCE_IMAGE_NAMESPACE}
          type: ImageChange
      template:
        metadata:
          name: api
          labels:
            app: mobile-signing-service
            component: api
        spec:
          terminationGracePeriodSeconds: 30
          volumes:
            - name: config-vol
              configMap:
                name: api-config
          containers:
            - name: api
              envFrom:
                - configMapRef:
                    name: api-env
                - secretRef:
                    name: minio-creds
                - secretRef:
                    name: patroni-creds
                - secretRef:
                    name: sso-creds
              image: ""
              imagePullPolicy: Always
              ports:
                - containerPort: 8080
              volumeMounts:
                - name: config-vol
                  mountPath: /opt/app-root/src/build/src/config/config.json
                  subPath: config.json
              resources:
                requests:
                  cpu: ${API_CPU_REQUEST}
                  memory: ${API_MEMORY_REQUEST}
                limits:
                  cpu: ${API_CPU_LIMIT}
                  memory: ${API_MEMORY_LIMIT}
              startupProbe:
                httpGet:
                  path: /api/v1/ehlo
                  port: 8080
                  scheme: HTTP
                failureThreshold: 120
                periodSeconds: 3
              livenessProbe:
                httpGet:
                  path: /api/v1/ehlo
                  port: 8080
                  scheme: HTTP
                failureThreshold: 3
                periodSeconds: 10
                timeoutSeconds: 5
              readinessProbe:
                httpGet:
                  path: /api/v1/ehlo
                  port: 8080
                  scheme: HTTP
                failureThreshold: 3
                periodSeconds: 10
                timeoutSeconds: 5
          # nodeSelector:
          #   kubernetes.io/hostname: mcs-silver-app-47.dmz
  - apiVersion: v1
    kind: Service
    metadata:
      name: web
      labels:
        app: mobile-signing-service
        component: web
    spec:
      ports:
        - name: 2015-tcp
          port: 2015
          targetPort: 2015
      selector:
        app: mobile-signing-service
        component: web
  - apiVersion: v1
    kind: Service
    metadata:
      name: api
      labels:
        app: mobile-signing-service
        component: api
    spec:
      ports:
        - name: 8080-tcp
          port: 8080
          targetPort: 8080
      selector:
        app: mobile-signing-service
        component: api
  - apiVersion: v1
    kind: Service
    metadata:
      name: minio
      labels:
        app: mobile-signing-service
        component: minio
    spec:
      ports:
        - name: 9000-tcp
          port: 9000
          targetPort: 9000
      selector:
        app: mobile-signing-service
        component: minio
  - apiVersion: v1
    kind: Route
    metadata:
      name: web
      labels:
        app: mobile-signing-service
        component: web
    spec:
      host: "${HOSTNAME_HTTPS}"
      port:
        targetPort: 2015-tcp
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
        certificate: |-
          ${TLS_CERT_PEM}
        key: |-
          ${TLS_KEY_PEM}
        caCertificate: |-
          ${TLS_CACERT_PEM}
      to:
        kind: Service
        name: web
        weight: 100
      wildcardPolicy: None
  - apiVersion: v1
    kind: Route
    metadata:
      name: api
      labels:
        app: mobile-signing-service
        component: api
    spec:
      host: "${HOSTNAME_HTTPS}"
      port:
        targetPort: 8080-tcp
      path: /api
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
        certificate: |-
          ${TLS_CERT_PEM}
        key: |-
          ${TLS_KEY_PEM}
        caCertificate: |-
          ${TLS_CACERT_PEM}
      to:
        kind: Service
        name: api
        weight: 100
      wildcardPolicy: None
  - apiVersion: v1
    kind: Route
    metadata:
      name: minio
      labels:
        app: mobile-signing-service
        component: minio
    spec:
      host: "${HOSTNAME_HTTPS}"
      # Minio's will use the "path" in a path based route to
      # determine the bucket name. This means, set "path" to
      # whatever bucket will be used.
      path: /secode-sign
      port:
        targetPort: 9000-tcp
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
        certificate: |-
          ${TLS_CERT_PEM}
        key: |-
          ${TLS_KEY_PEM}
        caCertificate: |-
          ${TLS_CACERT_PEM}
      to:
        kind: Service
        name: minio
        weight: 100
      wildcardPolicy: None
parameters:
  - name: NAMESPACE
    displayName: Namespace
    description: |
      The k8s namespace this deployment is being run
      agains.
    required: true
  - name: REPLICAS
    displayName: Replicas
    description: |
      The number of StatefulSet replicas (pods) that will be run.
    required: true
  - name: WEB_CPU_REQUEST
    displayName: Web CPU Request
    description: |
      The minimal amount of CPU required to start and run a pod in
      the replica set.
    required: true
  - name: WEB_CPU_LIMIT
    displayName: Web CPU Limit
    description: |
      The burstable maximum amount of CPU this application can utilize
      if available on the host machine.
    requred: true
  - name: WEB_MEMORY_REQUEST
    displayName: Web Memory Request
    description: |
      The minimal amount of memory required to start and run a
      pod in the statefulset set.
    required: true
  - name: WEB_MEMORY_LIMIT
    displayName: Web Memory Limit
    description: |
      The burstable maximum amount of memory a pod in the
      statefulset can utilize if available on the host
      machine if available.
    required: true
  - name: SSO_BASE_URL
    displayName: SSO Base URL
    description: |
      The URL for the SSO instance.
    required: true
  - name: WEB_IMAGE_TAG
    description: |
      The image tag used to specify which image you would like
      deployed. Don't use `latest`.
    required: true
  - name: API_IMAGE_TAG
    description: |
      The image tag used to specify which image you would like
      deployed. Don't use `latest`.
    required: true
  - name: SOURCE_IMAGE_NAMESPACE
    displayName: Source Image Namespace
    description: |
      The openshift namespace where builds and target 
      images are stored.
    required: true
  - name: TLS_CERT_PEM
    description: TLS certificate data in PEM format.
    displayName: TLS Certificate
    required: true
  - name: TLS_KEY_PEM
    description: |
      TLS certificate private key data in PEM format. This will be in
      the possesion of the person who created the Certificate Signing
      Request (CSR).
    displayName: TLS Private Key
    required: true
  - name: TLS_CACERT_PEM
    description: |
      TLS certificate cuthority certificate data in PEM format. If you
      got your certificate from an iStore request, use L1KChain.txt.
    displayName: TLS Certificate Authority Certificate
    required: true
  - name: HOSTNAME_HTTPS
    displayName: Route Name
    description: |
      The host name used for this route. Use the domain only like
      foo.example.com, do not include protocols or slashes.
    required: true
  - name: API_CPU_REQUEST
    displayName: API CPU Request
    description: |
      The minimal amount of CPU the API requires to start and run a
      pod in the replica set.
    required: true
  - name: API_CPU_LIMIT
    displayName: API CPU Limit
    description: |
      The burstable maximum amount of CPU the API can utilize
      if available on the host machine.
    requred: true
  - name: API_MEMORY_REQUEST
    displayName: API Memory Request
    description: |
      The minimal amount of memory required to start the API and
      run a pod in the statefulset set.
    required: true
  - name: API_MEMORY_LIMIT
    displayName: API Memory Limit
    description: |
      The burstable maximum amount of memory a API pod in the
      statefulset can utilize if available on the host
      machine if available.
    required: true
  - name: API_PORT
    displayName: API Port
    description: |
      The container port the node API application should bind
      to.
    required: true
  - name: NODE_ENV
    displayName: NodeJS Environment
    description: |
      The node.js environment setting. As per the docs this can be
      'production' or 'development'.
    required: true
  - name: AGENT_HOST
    displayName: Agent Host Name
    description: |
      The host name or IP where the API can send jobs to an 'Agent'
      for processing. Do not include protocols; they are added above.
    required: true
  - name: MINIO_CPU_REQUEST
    displayName: MINIO CPU Request
    description: |
      The minimal amount of CPU the MINIO requires to start and run a
      pod in the replica set.
    required: true
  - name: MINIO_CPU_LIMIT
    displayName: MINIO CPU Limit
    description: |
      The burstable maximum amount of CPU the MINIO can utilize
      if available on the host machine.
    requred: true
  - name: MINIO_MEMORY_REQUEST
    displayName: MINIO Memory Request
    description: |
      The minimal amount of memory required to start the MINIO and
      run a pod in the statefulset set.
    required: true
  - name: MINIO_MEMORY_LIMIT
    displayName: MINIO Memory Limit
    description: |
      The burstable maximum amount of memory a MINIO pod in the
      statefulset can utilize if available on the host
      machine if available.
    required: true
  - name: MINIO_VOLUME_CAPACITY
    displayName: Minio Volume Capacity
    description: |
      The size for the minio data storage volume.
    required: true
